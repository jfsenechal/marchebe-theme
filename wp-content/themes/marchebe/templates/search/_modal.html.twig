<div x-data="searchModal()" x-show="isSearchModalOpen" x-cloak>
    <section>
        <!-- Backdrop -->
        <div x-show="isSearchModalOpen"
             x-transition:enter="transition ease-out duration-300"
             x-transition:enter-start="opacity-0"
             x-transition:enter-end="opacity-100"
             x-transition:leave="transition ease-in duration-200"
             x-transition:leave-start="opacity-100"
             x-transition:leave-end="opacity-0"
             @click="closeSearchModal()"
             class="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-md flex justify-center items-start z-50 p-4 pt-16 sm:pt-24">

            <!-- Modal Content -->
            <div @click.stop
                 x-show="isSearchModalOpen"
                 x-transition:enter="transition ease-out duration-300"
                 x-transition:enter-start="opacity-0 transform scale-90"
                 x-transition:enter-end="opacity-100 transform scale-100"
                 x-transition:leave="transition ease-in duration-200"
                 x-transition:leave-start="opacity-100 transform scale-100"
                 x-transition:leave-end="opacity-0 transform scale-90"
                 class="bg-white rounded-2xl shadow-2xl w-full max-w-2xl flex flex-col transform transition-all"
                 role="dialog"
                 aria-modal="true"
                 aria-labelledby="modal-headline">

                <!-- Modal Header -->
                <div class="flex items-center justify-between p-4 border-b border-gray-200">
                    <div class="flex items-center space-x-3 w-full">
                        <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                        </svg>
                        <input x-model="searchQuery"
                               @input="handleSearchInput()"
                               type="search"
                               name="search"
                               autocomplete="off"
                               placeholder="Search for anything..."
                               class="block w-full bg-transparent py-1.5 text-base text-gray-900 placeholder:text-gray-500 focus:outline-none sm:text-sm"/>
                    </div>
                    <button @click="closeSearchModal()"
                            class="ml-4 p-2 rounded-full text-gray-400 hover:text-gray-600 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                        <span class="sr-only">Close modal</span>
                        <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M6 18L18 6M6 6l12 12"/>
                        </svg>
                    </button>
                </div>

                <!-- Modal Body -->
                <div class="p-6 overflow-y-auto max-h-[60vh]">
                    <!-- Loading State -->
                    <div x-show="isLoading" class="flex justify-center items-center py-10">
                        <svg class="animate-spin h-8 w-8 text-blue-600" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor"
                                    stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor"
                                  d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                    </div>

                    <!-- Error State -->
                    <div x-show="error && !isLoading" class="text-center py-10">
                        <p class="text-red-500 font-semibold">Error</p>
                        <p class="text-gray-500 mt-2" x-text="error"></p>
                    </div>

                    <!-- Results List -->
                    <ul x-show="results.length > 0 && !isLoading && !error" class="divide-y divide-gray-200">
                        <template x-for="result in results" :key="result.id">
                            <li class="py-4 flex items-center justify-between gap-3">
                                <a :href="result.url"
                                   @click="closeSearchModal()"
                                   class="group block w-full">
                                    <p class="font-semibold text-cta-dark group-hover:text-citoyen transition-colors"
                                       x-text="result.name"></p>
                                    <p class="text-sm text-gray-500" x-text="'arti'"></p>
                                </a>
                                <svg class="h-5 w-5 text-gray-400 group-hover:text-blue-600 transition-colors flex-shrink-0"
                                     fill="none"
                                     viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                          d="M9 5l7 7-7 7"/>
                                </svg>
                            </li>
                        </template>
                    </ul>

                    <!-- No Results State -->
                    <div x-show="searchQuery && results.length === 0 && !isLoading && !error" class="text-center py-10">
                        <p class="text-black-base font-semibold">No results found</p>
                        <p class="text-gray-500 mt-2">No results were found for "<span x-text="searchQuery"></span>".
                            Try a different search term.</p>
                    </div>

                    <!-- Initial State -->
                    <div x-show="!searchQuery && !isLoading" class="text-center py-10">
                        <p class="text-black-base font-semibold">Search the site</p>
                        <p class="text-gray-500 mt-2">Find articles, events, and more.</p>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>

<script>
    function searchModal() {
        return {
            debounceTimer: null,
            debounceDelay: 500,

            init() {
                // Listen for custom event to open modal
                window.addEventListener('open-search-modal', () => {
                    this.openModal();
                });
            },

            handleSearchInput() {
                // Clear previous timer
                if (this.debounceTimer) {
                    clearTimeout(this.debounceTimer);
                }

                // Clear results if query is too short
                if (!this.searchQuery || this.searchQuery.length < 2) {
                    this.results = [];
                    this.error = '';
                    return;
                }

                // Set new timer
                this.debounceTimer = setTimeout(() => {
                    this.performSearch(this.searchQuery);
                }, this.debounceDelay);
            },

            async performSearch(query) {
                if (!query || query.length < 2) {
                    this.results = [];
                    return;
                }

                this.isLoading = true;
                this.error = '';

                try {
                    // Make API call
                    const response = await fetch(`https://www.marche.be/nuxt/search.php?s=${encodeURIComponent(query)}`);

                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }

                    const data = await response.json();
                    this.results = Array.isArray(data) ? data : data.data || [];

                } catch (err) {
                    this.error = 'Failed to fetch search results';
                    this.results = [];
                    console.error('Search error:', err);
                } finally {
                    this.isLoading = false;
                }
            },
        };
    }
</script>